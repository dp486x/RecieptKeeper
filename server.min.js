/*! Receiptkeeper 2018-09-18 10:09:58 */

const express=require("express"),app=express(),chalk=require("chalk"),morgan=require("morgan"),mongoose=require("mongoose");mongoose.Promise=require("bluebird");const bodyParser=require("body-parser"),port=3333;var moment=require("moment"),util=require("util");const dataBase="receiptKeeper";var hostname="localhost";mongoose.connect("mongodb://"+hostname+":27017/"+dataBase).then(()=>{console.log("connected to mongoDB at "+hostname+":27017")},e=>{console.log("failed connection"+e)}),app.use(express.static(__dirname+"/")),app.use(bodyParser.urlencoded({extended:!1})),app.use(bodyParser.json()),app.use(morgan("dev",{skip:function(e,o){return o.statusCode<400},stream:process.stderr})),app.use(morgan("dev",{skip:(e,o)=>o.statusCode>=400,stream:process.stdout}));var requestTime=function(e,o,r){console.log(chalk.green("=================================================")),e.requestTime=moment().format("MMMM Do YYYY, h:mm:ss a"),console.log(util.inspect("got "+e.method+" request")),r()};app.use(requestTime),app.use("/users",require("./app/controllers/user_controller")),app.use("/notify",require("./app/controllers/notifications_controller")),app.use("/receipts",require("./app/controllers/receipt_controller")),app.get("/",(e,o)=>{o.send("Welcome to the receipt Keeper.")}),app.listen(3333,()=>{console.log("Server started  at : "+chalk.blue(3333))});